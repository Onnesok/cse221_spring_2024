###############################  Task 3 ##################################
##########################################################################

#path declaration
input_path = 'C:/Users/ASUS/Desktop/cse221_spring_2024/Lab 2/task3/input.txt'
output_path = 'C:/Users/ASUS/Desktop/cse221_spring_2024/Lab 2/task3/output.txt'


# read the file
inp = open(input_path, 'r')
# generate a output file by running the code
out = open(output_path, 'w')


size = int(inp.readline())  #Reading array size
for i in range(size):
  a = inp.readline().strip()
  print(a)
  
out.close()         #Closing output file to save and work properly 















# -*- coding: utf-8 -*-
"""Task 03.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jISb8JDpAoZJQ96FIMlFx645d333t-us
"""

## Task 3

# read the file
input_file = open("input3.txt", "r")

# generate a output file by running the code
output_file = open("output3.txt","w")

# Store data in a list
total = int(input_file.readline())
all = []
for i in range(total):
  all.append(list(map(int,input_file.readline().split(" "))))

# Sort data according to end time
def bubbleSort(arr):
  swapped = False
  for i in range(total):
    for j in range(total-i-1):
      if arr[j][1] > arr[j+1][1]:
        swapped = True
        arr[j], arr[j+1] = arr[j+1], arr[j]
    if swapped == False:
      return

# Call the Sort Function
bubbleSort(all)

# Calculate maximum tasks
count = 1
tasks = [all[0]]
idx = 0
for i in range(1,total):
  if all[i][0] >= tasks[idx][1]:
    tasks.append(all[i])
    count += 1
    idx += 1

# Write Output
output_file.write(f"{count}\n")
for item in tasks:
    output_file.write(f"{item[0]} {item[1]}\n")

# Must Close the Output File
output_file.close()